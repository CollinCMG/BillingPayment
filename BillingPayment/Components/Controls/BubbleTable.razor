@using BillingPayment.Models
@rendermode InteractiveServer

<div class="bubble-table-container">
    <div class="bubble-table-header-row">
        <div class="bubble-table-title">
            @Title
        </div>
        @if (ShowPayNow)
        {
            <button class="bubble-table-pay-btn" @onclick="OnPayNowClicked">
                Make Payment
            </button>
        }
    </div>
    <div class="bubble-table-scroll">
        <table class="bubble-table" aria-label="Account summary transactions">
            <caption class="visually-hidden">Account summary transactions</caption>
            <thead>
                <tr>
                    <th scope="col">Transaction Date</th>
                    <th scope="col">Cert./Pol. #</th>
                    <th scope="col">Description</th>
                    <th scope="col">Transaction/Installment Amount</th>
                    <th scope="col">Credits and Payments Applied</th>
                    <th scope="col">Minimum Due</th>
                </tr>
            </thead>
            <tbody>
                @if (Details != null)
                {
                    @foreach (var item in Details)
                    {
                        <tr>
                            <td>@(item.TransactionDate?.ToString("MM/dd/yyyy") ?? "")</td>
                            <td>@item.CertPolNo</td>
                            <td>
                                <span style="color: #888; font-size: 0.98rem; font-weight: 500;">
                                    @item.Description
                                </span>
                            </td>
                            <td style="font-weight: 500; color: #222;">
                                @item.TransactionAmount.ToString("C")
                            </td>
                            <td class="credits-payments-applied @(item.CreditsAndPaymentsApplied < 0 ? "negative" : null)">
                                @item.CreditsAndPaymentsApplied.ToString("C")
                            </td>
                            <td style="font-weight: 500; color: #222;">
                                @item.MinimumDue.ToString("C")
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {

    [Parameter] public List<InvoiceSummaryDetail>? Details { get; set; }
    [Parameter] public string Title { get; set; } = "Account Summary";
    [Parameter] public EventCallback OnPayNow { get; set; }
    [Parameter] public bool ShowPayNow { get; set; } = true;

    private async Task OnPayNowClicked()
    {
        if (OnPayNow.HasDelegate)
        {
            await OnPayNow.InvokeAsync();
        }
    }
}